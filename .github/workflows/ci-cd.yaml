name: App Pipeline

on:
  push:
    branches:
      - main  # Executa a pipeline quando houver um push na branch "main"
  pull_request:
    branches:
      - main  # Valida mudanças em pull requests

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    # Verifica o código do repositório
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configura o Docker Buildx (para compatibilidade com múltiplas arquiteturas)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Faz o login no Docker Registry (Docker Hub, Azure ACR, etc.)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Constrói e faz o push da imagem
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/hello-world-app:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    # Verifica o código do repositório
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configura o kubeconfig para se conectar ao cluster
    - name: Set up Kubernetes cluster
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    # Faz o deploy com Helm
    - name: Deploy with Helm
      run: |
        helm upgrade --install app ./helm --set image.repository=${{ secrets.DOCKER_USERNAME }}/ASCAN-app --set image.tag=latest
